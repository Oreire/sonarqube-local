name: SonarQube CI/CD

on:
  push:
    branches: [ main ]

jobs:
  deploy-and-scan:
    runs-on: self-hosted

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup kubectl
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # Step 3: Configure Kubernetes context (Docker Desktop)
      - name: Configure Kubernetes Context
        shell: pwsh
        run: |
          kubectl config use-context docker-desktop
          kubectl cluster-info

      # Step 4: Deploy SonarQube with Ingress
      - name: Deploy SonarQube
        shell: pwsh
        run: |
          kubectl apply -f Kube/sonar.yaml
          kubectl rollout status deployment/sonarqube -n sonarqube --timeout=300s

      # Step 5: Install Sonar Scanner (Windows) with folder cleanup
      - name: Install Sonar Scanner
        shell: pwsh
        run: |
          $url = "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-windows.zip"
          $zipPath = "$env:USERPROFILE\sonar-scanner.zip"
          $extractPath = "$env:USERPROFILE\sonar-scanner"

          # Remove previous installation if it exists
          if (Test-Path $extractPath) {
              Remove-Item -Recurse -Force $extractPath
          }

          Invoke-WebRequest -Uri $url -OutFile $zipPath
          Expand-Archive -LiteralPath $zipPath -DestinationPath $extractPath -Force

          # Add to PATH for this workflow
          echo "$extractPath\sonar-scanner-5.0.1.3006-windows\bin" >> $env:GITHUB_PATH

      # Step 6: Run SonarQube Scan with Token Pre-flight Check
      - name: Run SonarQube Scan
        shell: pwsh
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          if (-not $env:SONAR_TOKEN) {
            Write-Error "ERROR: SONAR_TOKEN is not set! Please create a secret named SONAR_TOKEN in your GitHub repository settings."
            exit 1
          }

          # Run the scan
          sonar-scanner.bat `
            -Dsonar.projectKey=my-project `
            -Dsonar.sources=. `
            -Dsonar.host.url=http://sonarqube.local `
            -Dsonar.login=$env:SONAR_TOKEN
